version: '3.8'

services:

  climacocal:
    build:
      context: .
    container_name: climacocal_app
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./myproject:/app
      - ./requirements.txt:/app/requirements.txt
      - climacocal_static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             gunicorn --bind 0.0.0.0:8000 myproject.wsgi:application"
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.climacocal.rule=Host(`${PUBLIC_DOMAIN_1}`) || Host(`${PUBLIC_DOMAIN_2}`) || Host(`${PRIVATE_DOMAIN}`)
      - traefik.http.routers.climacocal.entrypoints=web
      - traefik.http.routers.climacocal-secure.rule=Host(`${PUBLIC_DOMAIN_1}`) || Host(`${PUBLIC_DOMAIN_2}`) || Host(`${PRIVATE_DOMAIN}`)
      - traefik.http.routers.climacocal-secure.entrypoints=websecure
      - traefik.http.routers.climacocal-secure.tls=true
      - traefik.http.routers.climacocal-secure.tls.certresolver=letsencrypt
      - traefik.http.services.climacocal.loadbalancer.server.port=8000

  db:
    image: postgres:15
    container_name: climacocal_db
    restart: always
    env_file: .env
    volumes:
      - climacocal_postgres_data:/var/lib/postgresql/data
    networks:
      - proxy

  
volumes:
  climacocal_postgres_data:
  climacocal_static_volume:

networks:
  proxy:
    external: true

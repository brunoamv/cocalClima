version: '3.8'

services:

  web:
    build:
      context: .
    container_name: django_app
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./myproject:/app
      - ./requirements.txt:/app/requirements.txt
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "myproject.wsgi:application"]
    networks:
      - proxy

    labels:
      - io.portainer.accesscontrol.public
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`${PRIVATE_DOMAIN}`) || Host(`${PUBLIC_DOMAIN}`)
      - traefik.http.services.web.loadbalancer.server.port=8000

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - proxy

networks:
  proxy:
    external: true

volumes:
  postgres_data:

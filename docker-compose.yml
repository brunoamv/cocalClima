version: '3.8'

services:

  web:
    build:
      context: .
    container_name: django_app
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./myproject:/app
      - ./requirements.txt:/app/requirements.txt
      - static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             gunicorn --bind 0.0.0.0:8000 myproject.wsgi:application"
    networks:
      - proxy
    labels:
      - io.portainer.accesscontrol.public
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`climacocal.com.br`) || Host(`www.climacocal.com.br`)
      - traefik.http.services.web.loadbalancer.server.port=8000

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - proxy

  nginx:
    image: nginx:latest
    container_name: nginx_static
    restart: always    
    volumes:
      # Monta seus arquivos estáticos Django
      - static_volume:/app/staticfiles
      # Monta robots.txt e sitemap.xml
      - ./nginx/static:/etc/nginx/static:ro
      # Monta sua configuração customizada do NGINX
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - proxy
    labels:
      - traefik.enable=true
      # Serve tudo sob /static e também robots.txt e sitemap.xml
      - traefik.http.routers.static.rule=Host(`climacocal.com.br`) && (PathPrefix(`/static`) || Path(`/robots.txt`) || Path(`/sitemap.xml`))
      - traefik.http.services.static.loadbalancer.server.port=80

volumes:
  postgres_data:
  static_volume:

networks:
  proxy:
    external: true

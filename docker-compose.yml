version: '3.8'

services:

  # nginx removido - Django serve tudo via Traefik

  climacocal:
    build:
      context: .
    container_name: climacocal_app
    restart: always
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./myproject:/app
      - ./requirements.txt:/app/requirements.txt
      - climacocal_static_volume:/app/staticfiles
      - ./camera_stream:/app/camera_stream
    command: >
      sh -c "python manage.py collectstatic --noinput && \
             gunicorn --bind 0.0.0.0:8000 myproject.wsgi:application"
    networks:
      - proxy
    labels:
      - traefik.enable=true
      # HTTP router with redirect to HTTPS
      - traefik.http.routers.climacocal.rule=Host(`${PUBLIC_DOMAIN_1}`) || Host(`${PUBLIC_DOMAIN_2}`)
      - traefik.http.routers.climacocal.entrypoints=web
      - traefik.http.routers.climacocal.middlewares=redirect-to-https
      # Local HTTP router (no HTTPS redirect for local domain)
      - traefik.http.routers.climacocal-local.rule=Host(`${PRIVATE_DOMAIN}`)
      - traefik.http.routers.climacocal-local.entrypoints=web
      - traefik.http.routers.climacocal-local.priority=100
      - traefik.http.routers.climacocal-local.service=climacocal
      # HTTPS router (only for public domains)
      - traefik.http.routers.climacocal-secure.rule=Host(`${PUBLIC_DOMAIN_1}`) || Host(`${PUBLIC_DOMAIN_2}`)
      - traefik.http.routers.climacocal-secure.entrypoints=websecure
      - traefik.http.routers.climacocal-secure.tls=true
      - traefik.http.routers.climacocal-secure.tls.certresolver=letsencrypt
      # Local HTTPS router (with default certificate)
      - traefik.http.routers.climacocal-local-secure.rule=Host(`${PRIVATE_DOMAIN}`)
      - traefik.http.routers.climacocal-local-secure.entrypoints=websecure
      - traefik.http.routers.climacocal-local-secure.tls=true
      - traefik.http.routers.climacocal-local-secure.service=climacocal
      # Service pointing to Django (port 8000)
      - traefik.http.services.climacocal.loadbalancer.server.port=8000
      # Middleware for HTTPS redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

  db:
    image: postgres:15
    container_name: climacocal_db
    restart: always
    env_file: .env
    volumes:
      - climacocal_postgres_data:/var/lib/postgresql/data
    networks:
      - proxy

  # YouTube container removido - streaming agora é direto via FFmpeg

  # Camera streaming agora é gerenciado pelo Django com FFmpeg interno
  # Mantemos apenas um volume para arquivos HLS
  camera-stream-volume:
    image: alpine:latest
    container_name: camera_stream_volume
    command: sleep infinity
    volumes:
      - ./camera_stream:/camera_stream
    networks:
      - proxy

  
volumes:
  climacocal_postgres_data:
  climacocal_static_volume:

networks:
  proxy:
    external: true
